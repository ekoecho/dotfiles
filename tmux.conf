# Our .tmux.conf file
#
set -g default-shell /bin/zsh

# Setting the prefix from C-b to C-a
# START:prefix
set -g prefix C-a  
# END:prefix
# Free the original Ctrl-b prefix keybinding
# START:unbind
unbind C-b 
# END:unbind
#setting the delay between prefix and command
# START:delay
set -s escape-time 1
# END:delay
# Ensure that we can send Ctrl-A to other apps
# START:bind_prefix
bind C-a send-prefix
# END:bind_prefix

# Set the base index for windows to 1 instead of 0
# START:index
set -g base-index 1
# END:index

# Set the base index for panes to 1 instead of 0
# START:panes_index
setw -g pane-base-index 1
# END:panes_index

# Reload the file with Prefix r
# START:reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# END:reload

# splitting panes
# START:panesplit
bind | split-window -h
bind - split-window -v
# END:panesplit

# moving between panes
# START:paneselect
bind h select-pane -L 
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R    
# END:paneselect

# sync panes
bind ` set-window-option synchronize-panes

# Quick pane selection
# START:panetoggle
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# END:panetoggle

# Pane resizing
# START:paneresize
bind -r H resize-pane -L 5 
bind -r J resize-pane -D 5 
bind -r K resize-pane -U 5 
bind -r L resize-pane -R 5
# END:paneresize
# mouse support - set to on if you want to use the mouse
# START:mouse
setw -g mouse on
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M
bind-key -n WheelUpPane \
    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
        "send-keys -M; send-keys -M; send-keys -M" \
        "if-shell -Ft= '#{alternate_on}' \
            'send-keys Up Up Up' \
            'copy-mode -e'"

bind-key -n WheelDownPane \
    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
        "send-keys -M; send-keys -M; send-keys -M" \
        "if-shell -Ft= '#{alternate_on}' \
      'send-keys Down Down Down' \
      ''"
# END:mouse
#
#
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -T copy-mode-vi PageUp send-keys -X page-up
bind-key -T copy-mode-vi PageDown send-keys -X page-down

# Set the default terminal mode to 256color mode
# START:termcolor
#set -g terminal-overrides 'xterm:colors=256'
set -g default-terminal "tmux-256color"
#set-option -sa terminal-overrides ',*256col*:RGB'
set -ag terminal-overrides ",xterm-256color:RGB"

# END:termcolor

# enable activity alerts
#START:activity
setw -g monitor-activity on
set -g visual-activity on
#END:activity

# set the status line's colors
# START:statuscolor
set -g status-fg white
set -g status-bg black
# END:statuscolor

# set the color of the window list
# START:windowstatuscolor
setw -g window-status-style fg="#aaaaaa"
setw -g window-status-style bg=default 
setw -g window-status-style bright
# END:windowstatuscolor

# set colors for the active window
# START:activewindowstatuscolor
setw -g window-status-current-style fg=white 
setw -g window-status-current-style bg="#005faf"
setw -g window-status-current-style bright
# END:activewindowstatuscolor

set-window-option -g window-status-activity-style none
setw -g window-status-activity-style bg=black,fg="#ff8700"

# pane colors
# START:panecolors
set -g pane-border-style fg=blue
#set -g pane-border-bg black
set -g pane-active-border-style fg=white
#set -g pane-active-border-bg black
# END:panecolors

# Command / message line
# START:cmdlinecolors
set -g message-style fg=white,bg=black,bright
# END:cmdlinecolors

# Status line left side
# START:statusleft
set -g status-left-length 50 
set -g status-left "#[bg=#005faf][ﴱ #(kubectl config current-context) : #(kubens -c)]"
#set -g status-left "#[bg=#005faf][ﴱ #(grep 'current-context:' ~/.kube/configs/config-brix| sed 's/current-context: //') : #(/opt/homebrew/bin/kubectl --kubeconfig="/Users/gee/.kube/config" config view --minify --output 'jsonpath={..namespace}')]"
#set -g status-left "#[bg=#005faf][ﴱ #(grep 'current-context:' ~/.kube/config| sed 's/current-context: //') : #(/opt/homebre/bin/kubectl config view --minify --output 'jsonpath={..namespace}'; echo)]"
#set -g status-left '\ufd31 #(grep "current-context:" ~/.kube/config| sed "s/current-context: //")'
#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# END:statusleft


# Status line right side
# 15% | 28 Nov 18:15
# START: statusright
set -g status-right '#[fg=white]  #(get_pr_count) |  %d %b %R '

#set -g status-right "#[fg=white]%d %b %R"
# END:statusright

# Update the status bar every sixty seconds
# START:updateinterval
set -g status-interval 60
# END:updateinterval

# Center the window list
# START:centerwindowlist
set -g status-justify centre
# END:centerwindowlist

# enable vi keys.
# START:vikeys
setw -g mode-keys vi
# END:vikeys
#
#bind-key S-Pageup page-up
#bind -n S-Page-up copy-mode -u
bind -rn M-Down last-pane \; send-keys "PageDown" \; last-pane
bind -rn M-Up last-pane \; send-keys "PageUp" \; last-pane

